{"version":3,"sources":["actions/listActions.js","actions/index.js","components/AddTextArea.js","components/Card.js","actions/cardActions.js","components/AddButton.js","components/AddForm.js","components/List.js","components/App.js","reducers/listReducer.js","reducers/index.js","store/index.js","index.js"],"names":["sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","type","ACTION_TYPES","DRAG_DONE","payload","ADD_CARD","ADD_LIST","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","AddTextArea","_this$props","this","props","list","handleTextareaChange","hideForm","handleAddList","handleAddCard","text","placeholder","buttonTitle","react_default","a","createElement","Card","style","display","flexDirection","Textarea_default","styles","textArea","autoFocus","onBlur","onChange","e","value","formButtonGroup","Button","variant","button","onMouseDown","Icon","close","onClick","Component","resize","overflow","maxWidth","border","minHeight","outline","padding","color","backgroundColor","marginLeft","cursor","alignItems","marginTop","CardItem","state","edit","_this","_ref","target","setState","console","log","setIsEditing","handleDeleteCard","id","listId","deleteCard","handleEditCard","_this$props2","editCard","_this2","_this$props3","index","react_beautiful_dnd_esm","String","provided","Object","assign","draggableProps","dragHandleProps","ref","innerRef","container","CardContent","justifyContent","marginBottom","fontSize","delete","components_AddTextArea","Typography","component","&:hover","mapDispatchToProps","newText","connect","AddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","objectSpread","buttonWrapper","opacity","showForm","paddingLeft","height","width","borderRadius","AddForm","formVisible","addCard","addList","components_AddButton","title","minWidth","marginRight","List","cards","droppableId","droppableProps","map","card","components_Card","key","components_AddForm","App","onDragEnd","result","destination","source","lists","className","listContainer","components_List","React","initState","listReducer","arguments","length","undefined","action","concat","toConsumableArray","Date","now","_action$payload","item","push","_action$payload2","toString","_list$cards","splice","apply","_listEnd$cards","newState","find","_action$payload3","filter","_action$payload4","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cc9be4b9.chunk.js","sourcesContent":["import {ACTION_TYPES} from \"./index\";\n\n\n\nexport const sort = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n) => ({\n    type: ACTION_TYPES.DRAG_DONE,\n    payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        draggableId,\n    }\n});\n\n\nexport const addList = title => {\n    return ({\n        type: ACTION_TYPES.ADD_LIST,\n        payload: title\n    })\n};\n","export * from \"./listActions\";\nexport * from \"./cardActions\";\n\nexport const ACTION_TYPES = {\n    ADD_CARD: \"Add card\",\n    ADD_LIST: \"Add list\",\n    DRAG_DONE: \"Drag done\",\n    EDIT_CARD: \"Edit card\",\n    DELETE_CARD: \"Delete card\",\n    EDIT_LIST_TITLE: \"Edit list title\",\n    DELETE_LIST: \"Delete list title\",\n    SET_ACTIVE_BOARD: \"Set active board\",\n    ADD_BOARD: \"Add board\"\n};","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Textarea from \"@material-ui/core/InputBase/Textarea\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass AddTextArea extends Component {\r\n  render() {\r\n    const {\r\n      list,\r\n      handleTextareaChange,\r\n      hideForm,\r\n      handleAddList,\r\n      handleAddCard,\r\n      text\r\n    } = this.props;\r\n    const placeholder = list\r\n      ? \"Enter list title ...\"\r\n      : \"Enter a title for this card ...\";\r\n    const buttonTitle = list ? \"Add list\" : \"Add card\";\r\n    return (\r\n      <div>\r\n        <Card style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Textarea\r\n            style={styles.textArea}\r\n            autoFocus\r\n            placeholder={placeholder}\r\n            onBlur={hideForm}\r\n            onChange={e => handleTextareaChange(e)}\r\n            value={text}\r\n          />\r\n        </Card>\r\n        <div style={styles.formButtonGroup}>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={styles.button}\r\n            onMouseDown={list ? handleAddList : handleAddCard} // onMouseDown fires before onBlur\r\n          >\r\n            {buttonTitle}\r\n          </Button>\r\n          <Icon style={styles.close} onClick={hideForm}>close</Icon>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst styles = {\r\n  textArea: {\r\n    resize: \"none\",\r\n    overflow: \"hidden\",\r\n    maxWidth: \"100%\",\r\n    border: \"none\",\r\n    minHeight: 50,\r\n    outline: \"none\",\r\n    padding: 15\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"#5aac44\"\r\n  },\r\n  close: {\r\n    marginLeft: 10,\r\n    cursor: \"pointer\"\r\n  },\r\n  formButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nexport default AddTextArea;\r\n","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { deleteCard, editCard, sort } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport AddTextArea from \"./AddTextArea\";\n\nclass CardItem extends Component {\n  state = {\n    edit: false,\n    text: this.props.text\n  };\n\n  handleTextareaChange = ({ target: { value } }) => {\n    this.setState(\n      {\n        text: value\n      },\n      () => console.log(this.state.text)\n    );\n  };\n\n  setIsEditing = () => {\n    this.setState({ edit: true });\n  };\n\n  handleDeleteCard = () => {\n    const { id, listId, deleteCard } = this.props;\n    console.log(\"id, listId, deleteCard\", id, listId, deleteCard);\n    deleteCard(id, listId);\n  };\n\n  handleEditCard = () => {\n    const { id, listId, editCard } = this.props;\n    const { text } = this.state;\n    if (text) {\n      editCard(id, listId, text);\n      this.setState({ edit: false });\n    }\n  };\n\n  hideForm = () => {\n    this.setState({\n      edit: false,\n      text: this.props.text\n    })\n  };\n\n  render() {\n    const { text, id, index } = this.props;\n    const { edit } = this.state;\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <Card style={styles.container}>\n              <CardContent>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    marginBottom: \"10px\"\n                  }}\n                >\n                  <Icon\n                    onMouseDown={() => this.setIsEditing(true)}\n                    fontSize=\"small\"\n                    style={styles.edit}\n                  >\n                    edit\n                  </Icon>\n                  <Icon\n                    fontSize=\"small\"\n                    onClick={this.handleDeleteCard}\n                    style={styles.delete}\n                  >\n                    delete\n                  </Icon>\n                </div>\n                {edit ? (\n                  <AddTextArea\n                    text={this.state.text}\n                    handleTextareaChange={this.handleTextareaChange}\n                    handleAddCard={this.handleEditCard}\n                    hideForm={this.hideForm}\n                  />\n                ) : (\n                  <Typography variant=\"body2\" component=\"p\">\n                    {text}\n                  </Typography>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\nconst styles = {\n  container: {\n    marginBottom: 10\n  },\n  edit: {\n    cursor: \"pointer\",\n    color: \"#dfe3e6\",\n    \"&:hover\": {\n      color: \"#65686a\"\n    }\n  },\n  delete: {\n    cursor: \"pointer\",\n    color: \"#65686a\",\n    marginLeft: 5,\n    \"&:hover\": {\n      color: \"#65686a!important\"\n    }\n  }\n};\n\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = { sort, deleteCard, editCard };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CardItem);\n","import {ACTION_TYPES} from \"./index\";\n\nexport const addCard = (listId, text) => {\n    return ({\n        type: ACTION_TYPES.ADD_CARD,\n        payload: {listId, text}\n    })\n};\n\nexport const editCard = (id, listId, newText) => {\n    return {\n        type: ACTION_TYPES.EDIT_CARD,\n        payload: { id, listId, newText }\n    };\n};\n\nexport const deleteCard = (id, listId) => {\n    return {\n        type: ACTION_TYPES.DELETE_CARD,\n        payload: { id, listId }\n    };\n};","import React, {Component} from 'react';\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nclass AddButton extends Component {\r\n    render() {\r\n        const { list } = this.props;\r\n        const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n        const buttonTextOpacity = list ? 1 : 0.5;\r\n        const buttonTextColor = list ? \"white\" : \"inherit\";\r\n        const buttonTextBackground = list ? \"rgba(0, 0, 0, 0.15)\" : \"inherit\";\r\n        return (\r\n            <div\r\n                style={{\r\n                    ...styles.buttonWrapper,\r\n                    opacity: buttonTextOpacity,\r\n                    color: buttonTextColor,\r\n                    backgroundColor: buttonTextBackground\r\n                }}\r\n                onClick={this.props.showForm}\r\n            >\r\n                <Icon>add</Icon>\r\n                <p>{buttonText}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        paddingLeft: 10,\r\n        height: 36,\r\n        width: 272,\r\n        borderRadius: 3,\r\n    }\r\n};\r\n\r\nexport default AddButton;","import React, { Component } from \"react\";\nimport { addList, addCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport AddButton from \"./AddButton\";\nimport AddTextArea from \"./AddTextArea\";\n\nclass AddForm extends Component {\n  state = {\n    formVisible: false,\n    text: \"\"\n  };\n\n  handleAddCard = () => {\n    const { text } = this.state;\n    if (text) {\n      this.props.addCard(this.props.listId, text);\n      this.setState({ text: \"\" });\n    }\n  };\n\n  handleAddList = () => {\n    const { text } = this.state;\n    if (text) {\n      this.props.addList(text);\n      this.setState({ text: \"\" });\n    }\n  };\n\n  showForm = () => {\n    this.setState({ formVisible: true });\n  };\n\n  hideForm = () => {\n    this.setState({ formVisible: false });\n  };\n\n  handleTextareaChange = ({ target: { value } }) => {\n    this.setState(\n      {\n        text: value\n      },\n      () => console.log(this.state.text)\n    );\n  };\n\n  render() {\n    const { formVisible } = this.state;\n    return formVisible ? (\n      <AddTextArea\n        list={this.props.list}\n        handleTextareaChange={this.handleTextareaChange}\n        hideForm={this.hideForm}\n        handleAddList={this.handleAddList}\n        handleAddCard={this.handleAddCard}\n      />\n    ) : (\n      <AddButton list={this.props.list} showForm={this.showForm} />\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addList,\n  addCard\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddForm);\n","import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\nimport CardItem from \"./Card\";\nimport AddForm from \"./AddForm\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst styles = {\n  container: {\n    backgroundColor: \"#dfe3e6\",\n    borderRadius: 3,\n    maxWidth: 400,\n    minWidth: 300,\n    padding: 8,\n    marginRight: 10,\n    height: \"100%\"\n  }\n};\n\nclass List extends Component {\n  render() {\n    const { title, cards, listId } = this.props;\n    return (\n      <Droppable droppableId={String(listId)}>\n        {provided => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={styles.container}\n          >\n            <h4>{title}</h4>\n            {cards.map((card, index) => (\n              <CardItem {...card} key={card.id} listId={listId} id={card.id} index={index} />\n            ))}\n            <AddForm listId={listId} list={false}/>\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n\n// function mapStateToProps(state) {\n//   return {};\n// }\n\n// export default connect(mapStateToProps)(List);\nexport default List;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport List from \"./List\";\nimport AddForm from \"./AddForm\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\n\nclass App extends React.Component {\n    \n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    console.log(\"result\", result);\n    if (!destination) {\n        return\n    };\n    this.props.sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n    );\n  };\n  render() {\n    const { lists } = this.props;\n    console.log(\"render\", lists);\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <h2>Trello</h2>\n          <section style={styles.listContainer}>\n            {lists.map(list => (\n              <List\n                key={list.id}\n                title={list.title}\n                cards={list.cards}\n                listId={list.id}\n              />\n            ))}\n            <AddForm list={true} />\n          </section>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\nconst styles = {\n  listContainer: {\n    display: \"flex\"\n  }\n};\n\nconst mapStateToProps = ({ lists }) => ({ lists });\nconst mapDispatchToProps = { sort };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { ACTION_TYPES } from \"../actions\";\n\nconst initState = [\n  {\n    id: 1,\n    title: \"List 1\",\n    cards: [\n      {\n        id: 100,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      },\n      {\n        id: 101,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      },\n      {\n        id: 102,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      },\n      {\n        id: 103,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"List 2\",\n    cards: [\n      {\n        id: 200,\n        text:\n          \"111Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      },\n      {\n        id: 201,\n        text:\n          \"2222Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      },\n      {\n        id: 202,\n        text:\n          \"33333Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      }\n      // {\n      //   id: 203,\n      //   text:\n      //     \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      // },\n      // {\n      //   id: 204,\n      //   text:\n      //     \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, explicabo!\"\n      // }\n    ]\n  }\n];\n\nconst listReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_LIST: {\n      return [\n        ...state,\n        {\n          id: Date.now(),\n          title: action.payload,\n          cards: []\n        }\n      ];\n    }\n\n    case ACTION_TYPES.ADD_CARD: {\n      const { listId, text } = action.payload;\n      return [\n        ...state.map(item => {\n          if (item.id === listId) {\n            item.cards.push({ id: Date.now(), text });\n          }\n          return item;\n        })\n      ];\n    }\n\n    case ACTION_TYPES.DRAG_DONE: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId\n      } = action.payload;\n\n      if (droppableIdStart === droppableIdEnd) {\n        return [\n          ...state.map(list => {\n            if (droppableIdStart === list.id.toString()) {\n              const card = list.cards.splice(droppableIndexStart, 1);\n              list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n            return list;\n          })\n        ];\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const newState = [...state];\n        const listStart = newState.find(\n            item => item.id.toString() === droppableIdStart\n        );\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        const listEnd = newState.find(\n            item => item.id.toString() === droppableIdEnd\n        );\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n\n        return newState;\n      }\n    }\n\n    case ACTION_TYPES.DELETE_CARD: {\n      const { listId, id } = action.payload;\n\n      const list = state.find(\n          item => item.id === listId\n      );\n      list.cards = list.cards.filter(card => card.id !== id);\n\n      return [...state];\n    }\n\n    case ACTION_TYPES.EDIT_CARD: {\n      const { id, listId, newText } = action.payload;\n      const list = state.find(\n          item => item.id === listId\n      );\n      list.cards.map(item => {\n        if(item.id === id){\n          item.text = newText;\n        }\n        return item;\n      });\n      return [...state];\n    }\n\n    //\n    // case ACTION_TYPES.EDIT_LIST_TITLE: {\n    //   const { listID, newTitle } = action.payload;\n    //\n    //   const list = state[listID];\n    //   list.title = newTitle;\n    //   return { ...state, [listID]: list };\n    // }\n    //\n    // case ACTION_TYPES.DELETE_LIST: {\n    //   const { listID } = action.payload;\n    //   const newState = state;\n    //   delete newState[listID];\n    //   return newState;\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { combineReducers } from 'redux';\nimport lists from \"./listReducer\"\n\nexport default combineReducers({\n    lists,\n});","import {createStore} from \"redux\";\nimport rootReducer from \"../reducers\"\n\n\n//export default createStore(rootReducer)\n\nexport default createStore(\n    rootReducer, /* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}